/*
 * user_utils.h
 *
 *  Created on: 2021年1月13日
 *      Author: Sky
 */

#ifndef USER_INC_USER_UTILS_H_
#define USER_INC_USER_UTILS_H_
#include "const.h"

///***********************************************************************************************************
//  *  @brief					array data shift left
//  *
//  *
//  *  @param [in] :				arr:	 	待移动数据
//  *  							len：	参与移动的数据总长度
//  *							offset：	需要移动的偏移量
//  *							loop:	是否循环移动
//  *
//  *  @param [out] :
//  *
//  *  @return :
//  *
//  *  @note :
//  ************************************************************************************************************/
//void uint32ArrayShiftLeft(uint32 * arr, uint16 len, uint8 offset, uint8 loop);
///***********************************************************************************************************
//  *  @brief					array data shift right
//  *
//  *
//  *  @param [in] :				arr:	 	待移动数据
//  *  							len：	参与移动的数据总长度
//  *							offset：	需要移动的偏移量
//  *							loop:	是否循环移动
//  *  @param [out] :
//  *
//  *  @return :
//  *
//  *  @note :
//  ************************************************************************************************************/
//void uint32ArrayShiftRight(uint32 * arr, uint16 len, uint8 offset, uint8 loop);
//void	 setData2AllPosition(uint32 *arr);
//void	 memsetUint32(uint32* arr,uint32 data,uint8 len);
///***********************************************************************************************************
//  *  @brief  			从右侧找到非0数据，并把这个数据填满左侧
//  *
//  *
//  *  @param [in] :				arr:指向待处理数据的指针
//  *							len:参与处理的数据长度
//  *  @param [out] :
//  *
//  *  @return :
//  *
//  *  @note :
//  ************************************************************************************************************/
//void setData2ArrayRight(uint32* arr,uint8 len);
///***********************************************************************************************************
//  *  @brief  			从左侧找到非0数据，并把这个数据填满右侧
//  *
//  *
//  *  @param [in] :				arr:指向待处理数据的指针
//  *							len:参与处理的数据长度
//  *  @param [out] :
//  *
//  *  @return :
//  *
//  *  @note :
//  ************************************************************************************************************/
//void setData2ArrayByLeft(uint32* arr,uint8 len);
///***********************************************************************************************************
//  *  @brief					array data shift right
//  *
//  *
//  *  @param [in] :				arr:	 	待移动数据
//  *  							len：	参与移动的数据总长度
//  *  							blockLen: 单元长度
//  *							offset：	需要移动的偏移量
//  *							loop:	是否循环移动
//  *  @param [out] :
//  *
//  *  @return :					0/1	fail:success
//  *
//  *  @note :					len需要能被blockLen整除
//  ************************************************************************************************************/
//uint8 uint32ArrayShiftRightByBlock(uint32 * arr, uint16 len, uint8 blockLen,uint8 offset, uint8 loop) ;
//
///***********************************************************************************************************
//  *  @brief					array data shift left
//  *
//  *
//  *  @param [in] :				arr:	 	待移动数据
//  *  							len：	参与移动的数据总长度
//  *  							blockLen: 单元长度
//  *							offset：	需要移动的偏移量
//  *							loop:	是否循环移动
//  *  @param [out] :
//  *
//  *  @return :					0/1	fail:success
//  *
//  *  @note :					len需要能被blockLen整除
//  ************************************************************************************************************/
//uint8 uint32ArrayShiftLeftByBlock(uint32 * arr, uint16 len, uint8 blockLen,uint8 offset, uint8 loop);

/***********************************************************************************************************
  *  @brief  			获取1~ram之间的伪随机数
  *
  *  @param [in] :		0~255;
  *
  *  @param [out] :
  *
  *  @return :
  *
  *  @note :
  ************************************************************************************************************/
uint8 randomUint8(uint8 ram);

/***********************************************************************************************************
  *  @brief  			求两个uint8 数差的绝对值
  *
  *  @param [in] :
  *
  *  @param [out] :
  *
  *  @return :
  *
  *  @note :
  ************************************************************************************************************/
uint8 userAbsSubUint8(uint8 data1,uint8 data2);
#endif /* USER_INC_USER_UTILS_H_ */
